{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../FontawesomeIcon.svelte",
    "../../Footer.svelte",
    "../../Header.svelte",
    "../../MapView.svelte",
    "../../MaterialIcon.svelte",
    "../../Sidebar.svelte",
    "../../Legend.svelte",
    "../../RowItem.svelte",
    "../../RowItems.svelte",
    "../../ItemDetails.svelte",
    "../../ItemDetailsInfo.svelte",
    "../../CategoryFilters.svelte",
    "../../NameSearch.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Header from './components/Header.svelte'\n    import Footer from './components/Footer.svelte'\n    import MapView from './components/MapView.svelte'\n    import Sidebar from './components/Sidebar.svelte'\n\n    import {rows, filters} from './stores'\n\n\n    import {onMount} from 'svelte'\n    import importData from './utils/importData'\n\n    $: items = $rows.filter(row => $filters.every(f => f.filter(row)))\n\n    onMount(() => {\n        importData('data/rows.csv', rows)\n    })\n</script>\n\n<main>\n    <Header/>\n    <div class=\"content\">\n        <div class=\"sidebar\">\n            <Sidebar {items}/>\n        </div>\n        <div class=\"map\">\n            <MapView />\n        </div>\n    </div>\n    <Footer/>\n</main>\n\n<style>\n    main {\n        display: flex;\n        flex-direction: column;\n        height: 98vh;\n        margin: 0px auto;\n        max-width: 1500px;\n        color: #444;\n        padding: 0px 25px;\n    }\n\n    main > * {\n        flex: 1;\n    }\n\n    .content {\n        margin: 1rem 0rem;\n        display: flex;\n        flex-wrap: wrap;\n    }\n\n    .map {\n        flex: 2.5 1 300px;\n        min-width: 300px;\n    }\n\n    .sidebar {\n        flex: 1 1 300px;\n        min-width: 300px;\n        position: relative;\n        margin-right: 1rem;\n    }\n\n\n    @media only screen and (max-width: 768px) {\n        main {\n            padding: 0 30px;\n        }\n\n        .content {\n            min-height: 700px;\n        }\n\n        .content > div {\n            min-width: 51%;\n        }\n\n        .sidebar {\n            height: 800px;\n            margin-right: 0px;\n            margin-bottom: 1rem;\n        }\n\n        .map {\n            height: 500px;\n        }\n    }\n\n    :global(.is-1, .is-2, .is-3, .is-4, .is-5, .is-6, .is-7) {\n        font-family: 'Merriweather', serif;\n    }\n\n</style>\n",
    "<script>\n    export let icon = ''\n    export let alt = ''\n</script>\n\n<span class=\"fab fa-{icon} small\" translate=\"no\"  title={alt}></span>\n\n<style>\n    .small{\n        font-size: 2rem;\n    }\n</style>\n",
    "<script>\n    import MaterialIcon from './MaterialIcon.svelte'\n\n    let innerWidth\n    let opened = true;\n\n</script>\n\n<svelte:window bind:innerWidth={innerWidth}/>\n\n<footer>\n<a href=\"https://www.ifla.org/library-publishing\">&copy; Library Publishing Interest Group</a>&nbsp; | &nbsp;\n<a href=\"/about.html\">About </a> &nbsp;|&nbsp; \n<a href=\"/resources.html\">Useful Resources</a> \n</footer>\n\n<style>\n   footer{\n        display: flex;\n        flex: 1;\n        max-width: 1500px;\n        color: #444;\n        margin:auto;\n        padding: 0 15px;\n    }\n    @media only screen and (max-width: 768px) {\n       footer {\n         display:none;\n       }\n    }\n\n</style>\n",
    "<script>\n    import MaterialIcon from './MaterialIcon.svelte'\n\n    let innerWidth\n    let opened = true;\n\n</script>\n\n<svelte:window bind:innerWidth={innerWidth}/>\n\n<header>\n    {#if innerWidth > 768}\n        <div class=\"header-bar\">\n            <a class=\"is-1\" href=\"https://www.ifla.org\"><img src=\"images/logo.png\" alt=\"IFLA logo\" /></a>\n            <h1 class=\"title is-3\" id=\"title\">Library Publishing Map of the World</h1>\n            <a class=\"is-3\" href=\"https://www.ifla.org/library-publishing\"><img src=\"images/ifla95.png\" alt=\"IFLA Library Publishing SIG logo\" /></a>\n        </div>\n    {:else}\n        <div class=\"header-bar\">\n            <a class=\"is-1\" href=\"https://www.ifla.org\"><img src=\"images/logo.png\" alt=\"IFLA logo\" /></a>\n            <h1 class=\"title is-5\" id=\"title\">Library Publishing Map of the World</h1>\n            <a class=\"is-5\" href=\"https://www.ifla.org/library-publishing\"><img src=\"images/ifla95.png\" alt=\"IFLA Library Publishing SIG logo\" /></a>\n        </div>\n    {/if}\n</header>\n\n<style>\n    .header-bar {\n        margin: 1rem 0rem;\n        display: flex;\n        flex-direction: row;\n        flex-wrap: wrap;\n        justify-content: space-between;\n    }\n\n    .title {\n        margin-bottom: 10px !important;\n    }\n\n    .has-background-warning{\n        padding: 0.2rem 1rem ;\n    }\n\n    @media only screen and (max-width: 768px) {\n\n        #subtitle {\n            margin-top: 5px;\n            background-color: #eaeaea;\n            padding: 1rem 2rem;\n            z-index: 2;\n        }\n    }\n\n    .is-clicked {\n        background-color: #ecf1f8;\n    }\n\n    p {\n        margin-bottom: 0.25rem !important;\n    }\n</style>\n",
    "<script>\n    import Legend from \"./map/Legend.svelte\";\n    import {\n        mapObject,\n        selectedItem,\n        filters,\n        rows,\n        filterExtent\n    } from \"../stores\";\n    import { styles } from \"../constants\";\n    import { onMount } from \"svelte\";\n\n    let map;\n    let container;\n    let loaded = false;\n    let popup;\n    let previousSelectedItem;\n    let lastFeature;\n\n    //filter using everything but map-extent\n    $: items = $rows.filter(row =>\n        $filters.filter(f => f.label !== \"map-extent\").every(f => f.filter(row))\n    );\n\n    function updateExtentFilter(filterExtent) {\n        const features = map.queryRenderedFeatures({\n            layers: [\"markers\", \"points\"]\n        });\n\n        if (features) {\n            const unqiueIds = [\n                ...new Set(features.map(feature => feature.properties.id))\n            ];\n            if ($filters) {\n                //remove existing filter\n                const _filters = $filters;\n                const filter = _filters.findIndex(\n                    f => f.label === \"map-extent\"\n                );\n                if (filter > -1) _filters.splice(filter, 1);\n                if (filterExtent) {\n                    //generate new filter\n                    const mapExtentFilter = {\n                        label: \"map-extent\",\n                        filter: row => unqiueIds.includes(row.id)\n                    };\n                    filters.set([..._filters, mapExtentFilter]);\n                } else {\n                    filters.set(_filters);\n                }\n            }\n        }\n    }\n\n    $: if (map && loaded) updateExtentFilter($filterExtent); //update filter when $filterExtent checkbox store changes\n\n    function generateFeatures(items) {\n        return {\n            type: \"FeatureCollection\",\n            features: items.map(item => {\n                return {\n                    type: \"Feature\",\n                    id: item.id,\n                    geometry: {\n                        type: \"Point\",\n                        coordinates: item.coordinates\n                    },\n                    properties: item\n                };\n            })\n        };\n    }\n\n    onMount(() => {\n        mapboxgl.accessToken =\n            \"pk.eyJ1IjoiamFzb24yNzMiLCJhIjoiY2szZXBubGM1MDBxcDNtbzZxNHBxc2I5OSJ9.uT0EGQIuUTU5cBIlu_OOcQ\";\n        map = new mapboxgl.Map({\n            container,\n            style: \"mapbox://styles/mapbox/streets-v11\",\n\n            //center: [-89.2601765, 48.4205727],\n            zoom: 1,\n            maxZoom: 14,\n        });\n\n        map.addControl(new mapboxgl.NavigationControl());\n\n        // //To pan and zoom, use 2 fingers\n        // map.addControl(new MultiTouch());\n\n        popup = new mapboxgl.Popup({\n            closeButton: false,\n            closeOnClick: false\n        });\n\n        map.on(\"load\", () => {\n            const data = generateFeatures(items);\n            // Add an image to use as a custom marker\n            map.loadImage(\n                'https://docs.mapbox.com/mapbox-gl-js/assets/custom_marker.png',\n                function (error, image) {\n                    if (error) throw error;\n                    map.addImage('custom-marker', image);\n                }\n            );\n\n            map.addSource(\"libraries\", {\n                type: \"geojson\",\n                data,\n                cluster: true,\n                clusterMaxZoom: 14, // maz zoom to cluster points on\n                clusterRadius: 50 // radius of each cluster\n            });\n\n            map.addLayer({\n                id: \"libraries-circle\",\n                type: \"circle\",\n                source: \"libraries\",\n                filter: [\"has\", \"point_count\"],\n                paint: {\n                    // Use step expressions (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-step)\n                    // with three steps to implement three types of circles:\n                    //   * Blue, 20px circles when point count is less than 100\n                    //   * Yellow, 30px circles when point count is between 100 and 750\n                    //   * Pink, 40px circles when point count is greater than or equal to 750\n                    \"circle-color\": [\n                        \"step\",\n                        [\"get\", \"point_count\"],\n                        \"#51bbd6\",\n                        5,\n                        \"#f1f075\",\n                        10,\n                        \"#f28cb1\"\n                    ],\n                    \"circle-radius\": [\n                        \"step\",\n                        [\"get\", \"point_count\"],\n                        25,\n                        5,\n                        40,\n                        10,\n                        50\n                    ]\n                }\n            });\n\n            // cluster count\n            map.addLayer({\n                id: \"libraries-count\",\n                type: \"symbol\",\n                source: \"libraries\",\n                filter: [\"has\", \"point_count\"],\n                layout: {\n                    \"text-field\": \"{point_count_abbreviated}\",\n                    \"text-font\": [\n                        \"DIN Offc Pro Medium\",\n                        \"Arial Unicode MS Bold\"\n                    ],\n                    \"text-size\": 16,\n                }\n            });\n            map.addLayer({\n                id: \"unclustered-library\",\n                //type: \"circle\",\n                type: \"symbol\",\n                source: \"libraries\",\n                filter: [\"!\", [\"has\", \"point_count\"]],\n                layout: {\n                  \"icon-image\":\"custom-marker\",\n                  \"icon-size\": 0.68\n                },\n                //paint: {\n                  //  \"circle-color\": \"#00427a\",\n                   // \"circle-radius\": 8,\n                  //  \"circle-stroke-width\": 1,\n                  //  \"circle-stroke-color\": \"#000\"\n               // }\n            });\n\n            // inspect a cluster on click\n            map.on(\"click\", \"libraries-circle\", function(e) {\n                var features = map.queryRenderedFeatures(e.point, {\n                    layers: [\"libraries-circle\"]\n                });\n                var clusterId = features[0].properties.cluster_id;\n                map.getSource(\"libraries\").getClusterExpansionZoom(\n                    clusterId,\n                    function(err, zoom) {\n                        if (err) return;\n\n                        map.easeTo({\n                            center: features[0].geometry.coordinates,\n                            zoom: zoom\n                        });\n                    }\n                );\n            });\n\n            map.on(\"mouseenter\", \"unclustered-library\", e => {\n                map.getCanvas().style.cursor = \"pointer\";\n                const feature = e.features[0];\n                const coordinates = feature.geometry.coordinates.slice();\n                const InstitutionName = feature.properties['Institution Name'];\n                const LibraryName = feature.properties['Library Name'];\n                const description = `<h6>${InstitutionName}</h6><br  /><p>${LibraryName}</p>`;\n\n                popup\n                    .setLngLat(coordinates)\n                    .setHTML(description)\n                    .addTo(map);\n            });\n\n            map.on(\"mousemove\", \"unclustered-library\", e => {\n                const feature = map.queryRenderedFeatures(e.point)[0];\n                if (feature.properties.id !== lastFeature) {\n                    lastFeature = feature.properties.id;\n                    const coordinates = feature.geometry.coordinates.slice();\n                    const InstitutionName = feature.properties['Institution Name'];\n                    const LibraryName = feature.properties['Library Name'];\n                    const description = `<h6>${InstitutionName}</h6><br  /><p>${LibraryName}</p>`;\n                    popup.remove();\n                    popup\n                        .setLngLat(coordinates)\n                        .setHTML(description)\n                        .addTo(map);\n                }\n            });\n\n            map.on(\"mouseleave\", \"unclustered-library\", () => {\n                map.getCanvas().style.cursor = \"\";\n                popup.remove();\n            });\n\n            map.on(\"click\", () => {\n                selectedItem.select(null);\n            });\n\n            map.on(\"click\", \"unclustered-library\", e => {\n                const feature = e.features[0];\n                selectedItem.select(feature.properties);\n            });\n\n            //load icon and symbol layer\n            const uniqueStyleIcons = [\n                ...new Set(styles.map(style => style.icon))\n            ];\n\n        });\n\n        mapObject.set(map);\n    });\n\n    $: if (map && loaded) {\n        const data = generateFeatures(items);\n        const layer = map.getSource(\"libraries\");\n        if (layer) {\n            layer.setData(data);\n        }\n    }\n\n    $: if (map && loaded) {\n        if (previousSelectedItem) {\n            //remove previous selectedItem\n            map.setFeatureState(\n                { source: \"libraries\", id: previousSelectedItem.id },\n                { highlight: false }\n            );\n        }\n        if ($selectedItem) {\n            map.setFeatureState(\n                { source: \"libraries\", id: $selectedItem.id },\n                { highlight: true }\n            );\n        }\n        previousSelectedItem = $selectedItem;\n    }\n</script>\n\n<style>\n    #map {\n        width: 100%;\n        height: 100%;\n    }\n\n    :global(.mapboxgl-popup) {\n        max-width: 400px;\n    }\n\n    :global(.mapboxgl-popup-content) {\n        border: 1px solid rgba(211, 211, 211, 0.5);\n    }\n\n    :global(.mapboxgl-popup-content p) {\n        margin-bottom: 1px !important;\n    }\n</style>\n\n<div id=\"map\" bind:this={container}>\n    <!-- Legend / -->\n</div>\n",
    "<script>\n    export let icon = ''\n    export let size = ''\n    export let alt = ''\n</script>\n\n<span class=\"material-icons notranslate {size}\" translate=\"no\"  title={alt}>{icon}</span>\n\n<style>\n    .small{\n        font-size: 0.8rem;\n    }\n</style>",
    "<script>\n    import {selectedItem} from '../stores'\n    import NameSearch from './sidebar/filters/NameSearch.svelte'\n    import OtherFilters from './sidebar/filters/OtherFilters.svelte'\n    import RowItems from './sidebar/RowItems.svelte'\n    import ItemDetails from './sidebar/details/ItemDetails.svelte'\n\n    export let items = []\n</script>\n\n<div class=\"sidebar-content\">\n    <div class=\"search\">\n        <NameSearch/>\n        <OtherFilters/>\n    </div>\n    <div class=\"items\">\n        <RowItems {items} show={!$selectedItem}/>\n        {#if $selectedItem}\n            <ItemDetails/>\n        {/if}\n    </div>\n</div>\n\n<style>\n    .sidebar-content {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n    }\n\n    .items {\n        margin-top: 1rem;\n        flex: 0 1 auto;\n        position: relative;\n        height: inherit;\n        overflow: auto;\n        box-shadow: 0px 0px 2px 2px rgba(128, 128, 128, 0.2);\n    }\n</style>\n",
    "<script>\n    import {categoryGroups, styles} from '../../constants'\n\n    let opened = localStorage.getItem('header') === null ? true : JSON.parse(localStorage.getItem('header'));\n\n    function toggleOpen(){\n        //toggle and save to local storage\n        opened = !opened\n        localStorage.setItem('header', opened)\n    }\n\n    //group similar colors\n    const groups = styles.filter(i => i.group).reduce((groups, i) => {\n        const color = i.fillColor,\n                name = i.categoryName\n        if (!(color in groups)){\n            //setup object\n            groups[color] = {names: [], color}\n        }\n\n        if(!groups[color].names.includes(name)){\n            //only push if unique\n            groups[color].names.push(name)\n        }\n\n        return groups\n    }, {})\n</script>\n\n<div class=\"legend\" id=\"legend\">\n    <div class=\"legend-title\">\n        <h5>Legend</h5>\n        <p><a href=\"#legend\" aria-label=\"Hide map legend\" on:click={toggleOpen}>{opened ? 'Hide' : 'Show'}</a></p>\n    </div>\n    {#if opened}\n        {#each Object.values(groups) as group}\n            <div class=\"legend-item\">\n                <div class=\"marker marker-category\" style=\"background-color: {group.color}\"></div>\n                <div>{group.names.join(', ')}</div>\n            </div>\n        {/each}\n    {/if}\n</div>\n\n<style>\n    .legend {\n        line-height: 18px;\n        color: #212121;\n        position: absolute;\n        right: 5px;\n        bottom: 30px;\n        z-index: 200;\n        border-radius: 3px;\n        background-color: rgba(255, 255, 255, 0.8);\n        box-shadow: 0px 1px 2px rgba(136, 136, 136, 0.6);\n        padding: 5px 5px;\n        margin-bottom: 0px;\n        max-width: 80%;\n    }\n    .legend-title {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n    }\n    .legend-title p{\n        margin-bottom: 0;\n    }\n    .legend-title h5{\n        margin-right: 1rem;\n        margin-bottom: 0;\n    }\n    .legend-item {\n        letter-spacing: -0.2px;\n        margin-right: 1rem;\n        display: flex;\n        flex-direction: row;\n    }\n    .legend-item .marker {\n        margin-right: 1rem;\n        width: 16px;\n        height: 16px;\n    }\n</style>",
    "<script>\n    import {selectedItem, mapObject} from '../../stores'\n    import MaterialIcon from '../MaterialIcon.svelte'\n\n    export let item\n\n    function selectItem(item) {\n        selectedItem.select(item, $mapObject, item.coordinates)\n    }\n\n    $: socialBlog = item['Social Media - Blog'].trim().length\n    $: socialMedia= item['Social Media - Facebook'].trim().length\n    $: website = item['Website'].trim().length\n    $: email = item['Email'].trim().length\n    $: location = item['Location'].trim().length\n    $: estYear= item['Established Year'].trim().length\n</script>\n\n<div class=\"item\">\n    <a class=\"link\" role=\"listitem\" href=\"#\" on:click={() => selectItem(item)}>\n        <p class=\"is-6 subtitle is-marginless notranslate\" translate=\"no\"><strong>{item['Institution Name']}</strong></p>\n        <p class=\"is-6 subtitle is-marginless notranslate\" translate=\"no\">{item['Library Name']}</p>\n        {#if location}\n        <p class=\"is-6 subtitle is-marginless notranslate\" translate=\"no\">{item.Location}</p>\n        {/if}\n        {#if estYear}\n        <p class=\"is-6 subtitle is-marginless notranslate\" translate=\"no\">Est. {item['Established Year']}</p>\n        {/if}\n    </a>\n    <!-- img class=\"category-icon\" src=\"./icons/{typeLibrary.icon}\" style=\"opacity: {item._closed ? 0.5 : 1}\"/ -->\n</div>\n\n<style>\n    a {\n        color: #0e0e0e;\n        text-decoration: none;\n        display: block;\n\n    }\n\n    .item {\n        position: relative;\n        width: 100%;\n    }\n\n    .link {\n        padding: 10px 10px;\n        text-decoration: none;\n        border-bottom: 1px solid rgba(170, 170, 170);\n    }\n\n    .category-icon {\n        position: absolute;\n        right: 10px;\n        top: 10px;\n        width: 24px;\n        height: 28px;\n    }\n\n    .icons {\n        display: flex;\n        flex-direction: row;\n        align-items: flex-end;\n        font-size: 1.2rem;\n    }\n\n    a:hover, a:focus {\n        background-color: #ecf1f8;\n    }\n\n    a:focus{\n        border: 1px dotted #8e8e90;\n        border-bottom: none;\n    }\n</style>\n",
    "<script>\n    import RowItem from './RowItem.svelte'\n    export let show\n    export let items;\n    console.log(items);\n    for(i in items){\n      console.log(i.id);\n    }\n</script>\n\n<div class=\"listings {show ? '' : 'is-hidden'}\" role=\"list\" aria-label=\"listings\">\n    {#each items as item (item.id) }\n        <RowItem {item}/>\n    {/each}\n</div>\n\n\n<style>\n    .listings {\n        position: absolute;\n        height: 100%;\n        width: 100%;\n    }\n</style>\n",
    "<script>\n    import {selectedItem} from '../../../stores'\n    import MarkdownField from './MarkdownField.svelte'\n    import ItemDetailsInfo from './ItemDetailsInfo.svelte'\n    import MaterialIcon from '../../MaterialIcon.svelte'\n\n    $: item = $selectedItem\n    console.log($selectedItem);\n\n    let subCategories = []\n\n    $: if (item) subCategories = item['Category'].split(',').filter(tag => tag.trim())\n    \n    $: location = item['Location'].trim().length\n    $: estYear= item['Established Year'].trim().length\n\n    function resetSelect() {\n        selectedItem.select(null)\n    }\n\n    // Name\n    // Institution Name\n    // Library Name\n    // Unit Name\n    // Website\n    // Email\n    // Social Media - Blog\n    //,Social Media - Twitter\n    //,Social Media - Facebook\n    //,Social Media - Instagram\n    //,Social Media - YouTube\n    //, Social Media - Other,\n    //Contact Name,\n    //Contact Title,\n    //Contact Phone,\n    //Contact Email,\n    //Program Overview,\n    //Location,\n    //Stage (1-3),\n    //Established Year,\n    //Languages,\n    //,\n    //Additional comments,\n    //Sub-Category,\n    //Status,\n    //Latitude,\n    //Longitude\n</script>\n\n<div class=\"details\">\n    <div class=\"header\">\n        <button class=\"button is-small back\" on:click={resetSelect}>\n            <MaterialIcon icon=\"keyboard_backspace\"/>\n        </button>\n        <!-- img class=\"icon\" src=\"./icons/{item.icon}\"/ -->\n    </div>\n    <div class=\"content\">\n        <h1 class=\"is-5 subtitle is-marginless notranslate\" translate=\"no\">{item['Institution Name']}</h1>\n        <h2 class=\"is-5 subtitle is-marginless notranslate\" translate=\"no\">{item['Library Name']}</h2>\n        {#if item['Library Name'] != item['Unit Name']}\n        <h3 class=\"is-5 subtitle is-marginless notranslate\" translate=\"no\">{item['Unit Name']}</h3>\n        {/if} \n        <!--\n            p class=\"address\">\n            <span class=\"notranslate\" translate=\"no\">{item.Address}</span>\n            <a href=\"http://maps.google.com/?q={item.Address}\" target=\"_blank\">\n                <MaterialIcon icon=\"pin_drop\"/>\n            </a>\n        </p>\n        <Status status={item.Status}/>\n    -->\n        <br />\n        <div class=\"category\">\n            <strong>Types of Libraries - </strong>\n            {#if subCategories.length}\n                <div class=\"tags are-small\">\n                    {#each subCategories as tag}\n                        <span class=\"tag\">{tag}</span>\n                    {/each}\n                </div>\n            {/if}\n        </div>\n<!--\n        {#if item['Outdoor Space'].trim().length}\n            <div class=\"category\">\n                <strong>Outdoor Seating -</strong>\n                <p><span class=\"tag is-primary is-small\">{item['Outdoor Space']}</span></p>\n            </div>\n        {/if}\n\n        {#if item['Indoor Seating'] && item['Indoor Seating'].toLowerCase().includes('yes')}\n            <div class=\"category\">\n                <strong>Indoor Dining - </strong>\n                <p><span\n                        class=\"tag is-primary is-small\">{item['Indoor Seating'].replace(/^\\w/, c => c.toUpperCase())}</span>\n                </p>\n            </div>\n        {/if}\n-->\n        <!-- Social Media Links -->\n        {#if item['Social Media - Blog'] }\n           <ItemDetailsInfo url={item['Social Media - Blog']} text=\" \" icon=\"blogger-b\" type=\"website\"/>\n        {/if}\n        {#if item['Social Media - Twitter'] }\n           <ItemDetailsInfo url={item['Social Media - Twitter']} text=\" \" icon=\"twitter\" type=\"website\"/>\n        {/if}\n        {#if item['Social Media - Facebook'] }\n           <ItemDetailsInfo url={item['Social Media - Facebook']} text=\" \" icon=\"facebook\" type=\"website\"/>\n        {/if}\n        {#if item['Social Media - Instagram'] }\n           <ItemDetailsInfo url={item['Social Media - Instagram']} text=\" \" icon=\"instagram\" type=\"website\"/>\n        {/if}\n        {#if item['Social Media - YouTube'] }\n           <ItemDetailsInfo url={item['Social Media - Youtube']} text=\" \" icon=\"youtube\" type=\"website\"/>\n        {/if}\n        {#if item['Social Media - Other'] }\n           <ItemDetailsInfo url={item['Social Media - Other']} text=\" \" icon=\"public\" icontype=\"mdi\" type=\"website\"/>\n        {/if}\n\n        <!-- Contact Info -->\n        <h4 class=\"is-5 subtitle is-marginless notranslate\" translate=\"no\">Contact:</h4>\n        <MarkdownField title=\"Name\" content={item['Contact Name']} type=\"notitle\"/>\n        <MarkdownField title=\"Title\" content={item['Contact Title']} type=\"notitle\"/>\n        <MarkdownField title=\"Phone\" content={item['Contact Phone']} type=\"notitle\"/>\n        <MarkdownField title=\"Email\" content={item['Contact Email']} type=\"notitle\"/>\n   \n        <br />\n \n        <MarkdownField title=\"Location\" content={item.Location}/>\n        <MarkdownField title=\"Established Year\" content={item['Established Year']}/>\n        <br />\n        <MarkdownField title=\"Program Overview\" content={item['Program Overview']}/>\n\n        <MarkdownField title=\"Hours\" content={item.Hours}/>\n        <MarkdownField title=\"Special Accommodation Hours\" content={item['Special Accommodation Hours']}/>\n<!--        <MarkdownField title=\"Notes\" content={item.Notes}/>-->\n        <hr>\n<!--\n        <PickupDelivery\n                pickup={item['Pickup Offered']}\n                delivery={item['Delivery Offered']}\n                notes={item['Delivery/Pickup Notes']}\n        />\n        <LastUpdated lastUpdated={item['Last Updated']} source={item['Source']}/>\n-->\n\n    </div>\n</div>\n\n<style>\n    h1{ padding: 15px 0px; font-size:1.8rem}\n    h2{ padding: 15px 0px; font-size:1.6rem}\n    h4{ padding: 15px 0px; }\n    .details {\n        padding-top: 10px;\n        margin-left: 0.5rem;\n        height: 100px;\n    }\n\n    .header {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n\n    }\n\n    .back {\n        margin-right: 5px;\n    }\n\n    .icon {\n        width: 32px;\n        height: 35px;\n        position: absolute;\n        right: 5px;\n    }\n\n    .address {\n        font-size: 0.9rem;\n    }\n\n    .category {\n        display: flex;\n        flex-direction: row;\n    }\n\n    .category * {\n        margin-right: 5px;\n    }\n\n    .content {\n        margin-top: 1rem;\n    }\n\n    .content * {\n        margin-bottom: 5px;\n    }\n\n</style>\n",
    "<script>\n    import {formatPhoneNumber, getValidUrl} from '../../../utils/textFormatting'\n    import MaterialIcon from '../../MaterialIcon.svelte'\n    import FontawesomeIcon from '../../FontawesomeIcon.svelte'\n\n    export let text = ''\n    export let url = ''\n    export let icon = 'indeterminate_check_box'\n    export let type = 'text'\n    export let icontype = 'icontype'\n</script>\n\n    {#if type === 'email'}\n        <a href=\"mailto:{text}\">\n            <p class=\"info\">\n                <MaterialIcon icon={icon} alt=\"Email Address\"/>{text}\n            </p>\n        </a>\n    {:else if type === 'phone'}\n        <a href=\"tel:{formatPhoneNumber(text)}\">\n            <p class=\"info\">\n                <MaterialIcon icon={icon} alt=\"Phone Number\"/>{text}\n            </p>\n        </a>\n    {:else if type === 'website'}\n        <a target=\"_blank\" href=\"{getValidUrl(url)}\">\n           {#if icontype == 'mdi'}\n              <MaterialIcon icon={icon} alt=\"website\"/>{text}\n           {:else}\n              <FontawesomeIcon icon={icon} alt=\"Website\"/>{text}\n           {/if}\n        </a>\n    {:else}\n        <p class=\"info\">\n            <MaterialIcon icon={icon}/>{text}\n        </p>\n    {/if}\n\n<style>\n    .info {\n        display: flex;\n        align-items: center;\n        font-size: 0.9rem;\n        margin-bottom: 5px;\n    }\n\n    .info span {\n        margin-right: 10px;\n    }\n</style>\n",
    "<script>\n    import SlimSelect from './SlimSelect.svelte'\n    import {rows, filters} from '../../../stores'\n    import {categoryGroups, styles} from '../../../constants'\n\n    let selectedCategories = []\n    let categoryOptions\n\n    $: setupCategoryOptions($rows)\n\n    function setupCategoryOptions(rows) {\n        if (rows.length > 0) {\n            //reset\n            selectedCategories = []\n            //set up SlimSelect options\n            let options = categoryGroups.reduce((groups, groupLabel) => {\n                const options = styles\n                        .filter(cat => cat.group === groupLabel)\n                        .map(cat => ({\n                            text: cat.categoryName,\n                            value: cat.categoryName,\n                            innerHTML: `<span style=\"padding-left: 5px; border-left: 5px solid ${cat.fillColor};\">${cat.categoryName}</span>`\n                        }))\n                \n                const uniqueOptions = options.filter((item1, index, self) => {\n                    const findIndex = self.findIndex(item2 => item1.text === item2.text)\n                    return findIndex === index\n                })\n\n                const group = {\n                    label: groupLabel,\n                    options: uniqueOptions\n                }\n\n                return [...groups, group]\n            }, [])\n\n            //get unique categories from rows\n            const uniqueCategories = Array.from(new Set(rows.map(({Category})=>Category)))\n            \n            //filter for items not in groups\n            const otherGroup = uniqueCategories.filter(cat => !styles.map(i => i.categoryName).includes(cat))\n\n            categoryOptions = {\n                data: [...options ] \n            }\n        }\n    }\n\n    $: {\n        if ($filters) {\n            //remove existing filter\n            const _filters = $filters\n            const filter = _filters.findIndex(f => f.label === 'categories')\n            console.log(filter)\n            if (filter > -1) _filters.splice(filter, 1)\n            //generate new filter\n            if(selectedCategories){\n                const categoryFilter = {\n                    label: 'categories',\n                    filter: (row) => {\n                        if (selectedCategories.length) {\n                                return selectedCategories.includes(row['Category'])\n                            } else {\n                                return true\n                            }\n                    }\n                }\n                filters.set([..._filters, categoryFilter])\n            }\n        }\n    }\n\n</script>\n\n{#if categoryOptions && 'data' in categoryOptions}\n    <SlimSelect bind:value={selectedCategories} options={categoryOptions} multiple={true} text=\"Types of Libraries\"/>\n{/if}\n\n<style>\n    :global(.ss-value) {\n        background-color: #878787 !important;\n        font-weight: 500;\n    }\n\n    :global(span.ss-disabled) {\n        font-size: 0.8em !important;\n        color: rgba(113, 113, 113, 0.8) !important;\n    }\n</style>\n",
    "<script>\n    import { rows, filters } from \"../../../stores\";\n    import FlexSearch from \"flexsearch\";\n\n    export let textSearch = \"\";\n    let value = \"\";\n    let index;\n\n    $: if ($rows) {\n        index = new FlexSearch({\n            tokenize: \"full\",\n            encode: \"advanced\",\n            cache: false,\n            async: false,\n            worker: false,\n            threshold: 0,\n            depth: 0,\n            doc: {\n                id: \"id\",\n                field: [\n                    \"Institution Name\",\n                    \"Library Name\",\n                    \"Location\",\n                    \"Contact Title\",\n                    \"Contact Name\",\n                    \"Contact Phone\",\n                    \"Contact Email\",\n                    \"Program Overview\",\n                    \"Location\",\n                    \"Established Year\",\n                ]\n            }\n        });\n        index.add($rows);\n    }\n\n    function _search() {\n        const matchedRows = index.search(value);\n        const matchedIds = matchedRows.map(item => item.id);\n        //remove existing filter\n        const _filters = $filters;\n        const filter = _filters.findIndex(f => f.label === \"name\");\n        if (filter > -1) _filters.splice(filter, 1);\n        //generate new filter\n        const nameFilter = {\n            label: \"name\",\n            filter: row => {\n                if (!value.trim()) return true;\n                return matchedIds.includes(row.id);\n            }\n        };\n        filters.set([..._filters, nameFilter]);\n    }\n</script>\n\n<style>\n    form {\n        margin-bottom: 1rem;\n    }\n\n    #text-input {\n        width: 100%;\n        padding: 5px 5px;\n        box-sizing: border-box;\n        margin-bottom: 5px;\n    }\n\n    ::placeholder {\n        color: rgba(77, 77, 77, 0.8) !important;\n        font-size: 0.8rem !important;\n        font-weight: 400;\n    }\n</style>\n\n<div class=\"field\">\n    <label class=\"label\">Search by Name</label>\n    <div class=\"field\">\n        <div class=\"control is-expanded\">\n            <input\n                id=\"text-input\"\n                placeholder=\"Search here\"\n                type=\"text\"\n                name=\"text-input\"\n                bind:value\n                autocomplete=\"off\"\n                on:keyup={_search} />\n        </div>\n    </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}